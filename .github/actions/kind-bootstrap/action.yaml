name: kind-bootstrap
description: Spin up a kind cluster (cert-manager + Flux + Kyverno) and optionally preload images

# ---------- inputs ----------
inputs:
  cluster_name:
    description: "kind cluster name"
    required: false
    default: test-infra
  wait_timeout:
    description: "Seconds to wait for add-ons to become Ready"
    required: false
    default: "300"
  images:
    description: "Space-separated list of Docker images to load into kind (optional)"
    required: false
    default: ""

outputs:
  kubeconfig:
    description: "Path to the kubeconfig file created by kind"
    value: ${{ steps.set-kcfg.outputs.kcfg }}

runs:
  using: composite
  steps:
    - name: Checkout test-infra
      uses: actions/checkout@v4
      with:
        repository: datum-cloud/test-infra
        path: test-infra

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ github.token }}

    - name: Bootstrap cluster
      shell: bash
      working-directory: test-infra
      run: |
        task cluster-up \
          CLUSTER_NAME="${{ inputs.cluster_name }}" \
          WAIT_TIMEOUT="${{ inputs.wait_timeout }}"

    - name: Load images into kind
      if: ${{ inputs.images != '' }}
      shell: bash
      working-directory: test-infra
      run: |
        # turn any new-lines into single spaces so the next command line is valid
        IMG_LIST=$(printf '%s' "${{ inputs.images }}" | tr '\n' ' ')
        task kind-load-image \
          CLUSTER_NAME="${{ inputs.cluster_name }}" \
          IMAGES="$IMG_LIST"

    # ----- expose kubeconfig -----
    - id: set-kcfg
      name: Export kubeconfig
      shell: bash
      run: |
        echo "kcfg=$HOME/.kube/config" >> "$GITHUB_OUTPUT"   # for outputs
        echo "KUBECONFIG=$HOME/.kube/config" >> "$GITHUB_ENV" # for later steps
